%Ex1-2020Drive prob1.2
f([],0).
f([H|T],S):-
  f(T,S1),
  S1<H,
  !,
  S is H.
f([_|T],S):-
  f(T,S1),
  S is S1.  
%
aux(H,S1,S):-
    S1<H,
    !,
    S is H.
aux(_,S1,S):-
    S is S1.
    
g([],0).
g([H|T],S):-
  g(T,S1),  
  aux(H,S1,S).

main(R):-
    %f([1,2,3,4,5,6],R).
	g([1,2,3,4,5,6],R).

-----------------------------------------------------------------------------------------------------------------------

%Ex2-2020Drive prob1.2
f([],-1).
f([H|T],S):-
  H>0,
  f(T,S1),
  S1<H,
  !,
  S is H.
f([_|T],S):-
  f(T,S1),
  S is S1.  
%
aux(H,S1,S):-
    H>0,
    S1<H,
    !,
    S is H.
aux(_,S1,S):-
    S is S1.
    
g([],-1).
g([H|T],S):-
  g(T,S1),  
  aux(H,S1,S).

main(R):-
    %f([1,2,3,4,5,6],R).
	g([1,2,3,4,5,6],R).
-----------------------------------------------------------------------------------------------------------------------

%Ex3-2020Drive prob1.2
f([],0).
f([H|T],S):-
  f(T,S1),
  H<S1,
  !,
  S is H+S1.
f([_|T],S):-
  f(T,S1),
  S is S1+2.  
%
aux(H,S1,S):-
    H<S1,
    !,
    S is S1+H.
aux(_,S1,S):-
    S is S1+2.
    
g([],0).
g([H|T],S):-
  g(T,S1),  
  aux(H,S1,S).

main(R):-
    %f([1,2,3,4,5,6],R).
	g([1,2,3,4,5,6],R).

-----------------------------------------------------------------------------------------------------------------------
%Ex4-2020Drive prob1.2
f(1,1):-!.
f(K,X):-
    K1 is K-1,
    f(K1,Y),
    Y>1,
    !,
    K2 is K1-1,
    X is K2.
f(K,X):-
    K1 is K-1,
    f(K1,Y),
    Y>0.5,
    !,
    X is Y.
f(K,X):-
    K1 is K-1,
    f(K1,Y),
    X is Y-1.


aux(K1,Y,X):-
    Y>1,
    K2 is K1-1,
    X is K2.
aux(_,Y,X):-
    Y>0.5,
    !,
    X is Y.
aux(_,Y,X):-
    X is Y-1.

g(1,1):-!.
g(K,X):-
    K1 is K-1,
    g(K1,Y),
    aux(K1,Y,X).

main(R):-
    %f(10,R).
	g(10,R).

-----------------------------------------------------------------------------------------------------------------------
%Ex2-2019Drive prob1.2
f([],-1).
f([H|T],S):-
  f(T,S1),
  S1>0,
  !,
  S is S1+H.
f([_|T],S):-
  f(T,S1),
  S is S1.  
%
aux(H,S1,S):-
    S1>0,
  !,
  S is S1+H.
aux(_,S1,S):-
    S is S1.
    
g([],-1).
g([H|T],S):-
  g(T,S1),  
  aux(H,S1,S).

main(R):-
    f([1,2,3,4,5,6],R).
	%g([1,2,3,4,5,6],R).

%1.
produs([],C,C).
produs([H|T],C,P):-
    P1 is C*H,
    produs(T,P1,P).

suma([],Sc,Sc).
suma([H|T],SC,S):-
    SC1 is H+SC,
    suma(T,SC1,S).

insert(E,L,[E|L]).
insert(E,[H|T],[H|R]):-
    insert(E,T,R).
%arr(L-list,K-number of elements,S-sum,P-product,R-resulted list)
arr([E|_],1,E,E,[E]).
arr([_|T],K,S,P,R):-
    arr(T,K,S,P,R).
arr([H|T],K,S,P,R1):-
    K>1,
    S1 is S-H,
    P1 is P/H,
    S1>0,
    P1>1,
    K1 is K-1,
    arr(T,K1,S1,P1,R),
    insert(H,R,R1).
%findall(R,arr([1,2,3,10],2,13,30,R),X).

%2.
select(Elem, [Elem|Tail], Tail).
select(Elem, [Head|Tail], [Head|Rest]) :-
  select(Elem, Tail, Rest).

consec_diff_permutations(L, V, Perms) :-
  consec_diff_permutations(L, [], V, Perms).

consec_diff_permutations([], Acc, _, Acc).
consec_diff_permutations(L, Acc, V, Perms) :-
  select(X, L, Rest),
  consec_diff_check(X, Acc, V),
  consec_diff_permutations(Rest, [X|Acc], V, Perms).

consec_diff_check(_, [], _).
consec_diff_check(X, [Y|_], V) :-
  abs(X - Y) >= V.
%findall(Perms,consec_diff_permutations([1, 2, 3, 4], 2, Perms),X).


%3the subsets of even sum formed by odd numbers only

subsets([], []).
subsets([H|T], [H|R]) :-
    H mod 2 =:= 1,
    subsets(T, R).
subsets([_|T], R) :-
    subsets(T, R).

evenSum(L):-
    suma(L,0,S),
    S mod 2 =:=0.

correctAnswers(L,X):-
    findall(R,(subsets(L,R),evenSum(R)),X).
%correctAnswers([1,2,3,4,5],R).

%4combinations

combinations([E|_],1,[E]).
combinations([_|T],K,R):-
             combinations(T,K,R).
combinations([H|T],K,[H|R]):-
    K>1,
    K1 is K-1,
    combinations(T,K1,R).
 
main(L,K,X):-
    findall(R,combinations(L,K,R),X).

%main([1,2,3],2,R).