% 2. Are given n points in a plan (represented using its coordinates). 
% Write a predicate to determine all subsets of collinear points.

% coliniare(x1, y1, x2, y2, z1, z2) = True, x1 == x2 == x3
%                                  = True, y1 == y2 == y3
%                                  = True, all different &
%                                  (y2-y1) / (x2-x1) == (y3-y2) /
%                                  (x3-x2)
%								  = False, otherwise

% coliniare(x1:number, y1:number, x2:number, y2:number, x3:number, y3:number)
% coliniare(i,i,i,i)

coliniare(X,_,X,_,X,_):-!.
coliniare(_,Y,_,Y,_,Y):-!.
coliniare(X1,Y1,X2,Y2,X3,Y3):-
    X1 =\= X2,X2 =\= X3,X1 =\= X3,
    Y1 =\= Y2,Y2 =\= Y3,Y1 =\= Y3,
    P1 is (Y2-Y1)/(X2-X1),
    P2 is (Y3-Y2)/(X3-X2),
    P1 =:= P2.

%subsets(List, ResultedList)={
%		ResultedList=[[x1,y1], [x2,y2], [x3,y3]], if A(x1,y1), B(x2,y2), C(x3,y3) are collinear
%		False, otherwise
%
%}

% subsets(L - given list, R - resulted list)
% subsets(i, o)

subsets(ListOfPoints,Res):-
	P1=[A,B],
	P2=[A1,B1],
	P3=[A2,B2], 
	member( P1, ListOfPoints ), 
	member( P2, ListOfPoints ), dif(P1, P2),  % no duplicate solutions
	member( P3, ListOfPoints ), dif(P1, P3), dif(P2, P3),
	coliniare(A,B,A1,B1,A2,B2),
	Res=[[A,B],[A1,B1],[A2,B2]].

% allsolutions(List, ResultedList){
%		findall(PartialList, subsets(List, PartialList), ResultedList). 
% }

% allsolutions(L:list, R:list)
% allsolutions(i, o)

allsolutions(L, R) :- 
    findall(RPartial, subsets(L, RPartial), R).

%allsolutions([[1,1],[2,2],[3,3],[0,0],[4,8],[1,2],[6,7],[8,9],[10,11]],R).

%Input: [ [1,1] , [2,2] , [3,3] , [0,0] , [4,8], [1,2], [6,7] , [8,9] , [10,11] ]
%Output: [ [ [1,1] , [2,2] , [3,3] ] , [ [1,1] , [2,2], [0,0] ] , [ [2,2], [3,3], [0,0] ] , [ [1,1] , [3,3], [0,0] ] , ...]

